<% flash.each do |type, message| %>
  <% next if message.blank? %>
  <% config = case type.to_sym
             when :notice
               { border: 'border-primary/40', bg: 'bg-primary/10', text: 'text-primary', icon: 'M13 16h-1v-4h-1m1-4h-.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' }
             when :success
               { border: 'border-success/40', bg: 'bg-success/10', text: 'text-success', icon: 'M9 12l2 2 4-4M21 12a9 9 0 11-18 0 9 9 0 0118 0z' }
             when :alert, :error
               { border: 'border-error/40', bg: 'bg-error/10', text: 'text-error', icon: 'M12 9v2m0 4h.01M4.93 4.93l14.14 14.14M12 5a7 7 0 100 14 7 7 0 000-14z' }
             else
               { border: 'border-base-300', bg: 'bg-base-200/80', text: 'text-base-content', icon: 'M13 16h-1v-4h-1m1-4h-.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' }
             end %>
  <div class="flex w-full items-start gap-3 rounded-2xl border <%= config[:border] %> <%= config[:bg] %> px-5 py-4 shadow-lg shadow-base-200/50">
    <span class="mt-1 inline-flex h-5 w-5 flex-shrink-0 items-center justify-center <%= config[:text] %>">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5">
        <path d="<%= config[:icon] %>"></path>
      </svg>
    </span>
    <p class="flex-1 text-sm font-medium text-base-content"><%= message %></p>
    <button type="button" class="ml-2 text-base-content/50 transition hover:text-base-content" aria-label="閉じる" onclick="this.closest('div').remove()">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5">
        <path d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
  </div>
<% end %>
